{
  "title": "kCompose",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// kCompose (>=>) :: Monad m => \n// [(a -> m a)] -> (a -> m a)\nconst kCompose = (...fs) =>\n    // Left Right composition of a sequence\n    // of functions which lift a raw value\n    // of the same type into the same monad.\n    x => 0 < fs.length ? (\n        fs.slice(1).reduce(\n            (m, f) => bind(m)(f),\n            fs[0](x)\n        )\n    ) : x;"
    }
  ]
}