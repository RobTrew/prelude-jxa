{
  "title": "mapAccumL",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// mapAccumL :: (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\nconst mapAccumL = f =>\n    // A tuple of an accumulation and a list \n    // obtained by a combined map and fold,\n    // with accumulation from left to right.\n    acc => xs => [...xs].reduce((a, x) => {\n        const pair = f(a[0])(x);\n        return Tuple(pair[0])(a[1].concat(pair[1]));\n    }, Tuple(acc)([]));"
    }
  ]
}