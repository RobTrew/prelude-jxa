{
  "title": "fmap (<$>)",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// fmap (<$>) :: Functor f => (a -> b) -> f a -> f b\nconst fmap = f => fa =>\n    Array.isArray(fa) ? (\n        fa.map(f)\n    ) : 'string' !== typeof fa ? (() => {\n        const t = fa.type;\n        return ('Either' === t ? (\n            fmapLR(f)(fa)\n        ) : 'Maybe' === t ? (\n            fmapMay(f)(fa)\n        ) : 'Node' === t ? (\n            fmapTree(f)(fa)\n        ) : 'Tuple' === t ? (\n            fmapTuple(f)(fa)\n        ) : undefined);\n    })() : fa.split('').map(f);"
    }
  ]
}