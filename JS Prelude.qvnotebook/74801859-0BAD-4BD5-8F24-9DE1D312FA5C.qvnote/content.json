{
  "title": "subTreeAtPath",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// subTreeAtPath :: Tree String -> [String] -> Maybe Tree String\nconst subTreeAtPath = tree => path => {\n    const go = (nest, xs) =>\n        0 < nest.length && 0 < xs.length ? (() => {\n            const h = xs[0];\n            return bindMay(find(t => h === t.root, nest))(\n                t => 1 < xs.length ? (\n                    go(t.nest, xs.slice(1))\n                ) : Just(t)\n            );\n        })() : Nothing();\n    return go([tree], path);\n};"
    }
  ]
}