{
  "title": "toEnum",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// toEnum :: a -> Int -> a\nconst toEnum = e =>\n    // The first argument is a sample of the type\n    // allowing the function to make the right mapping\n    x => ({\n        'number': Number,\n        'string': String.fromCodePoint,\n        'boolean': Boolean,\n        'object': v => e.min + v\n    } [typeof e])(x);"
    }
  ]
}