{
  "title": "treeMatches",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// treeMatches :: (a -> Bool) -> Tree a -> [Tree a]\nconst treeMatches = p => {\n    // A list of all nodes in the tree which match \n    // a predicate p.\n    // For the first match only, see findTree.\n    const go = tree =>\n        p(tree.root) ? (\n            [tree]\n        ) : tree.nest.flatMap(go);\n    return go;\n};"
    }
  ]
}