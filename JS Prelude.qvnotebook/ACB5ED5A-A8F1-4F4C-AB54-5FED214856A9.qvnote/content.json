{
  "title": "treeMenu",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// treeMenu :: Tree String -> IO [String]\nconst treeMenu = tree => {\n    const go = t => {\n        const\n            strTitle = t.root,\n            subs = t.nest,\n            menu = subs.map(root),\n            blnMore = 0 < subs.flatMap(nest).length;\n        return until(tpl => !fst(tpl) || !isNull(snd(tpl)))(\n            tpl => either(\n                x => Tuple(false)([])\n            )(\n                Tuple(true)\n            )(\n                bindLR(showMenuLR(!blnMore)(strTitle)(menu))(\n                    ks => {\n                        const k = ks[0];\n                        return maybe(\n                            Left(k + ': not found in ' +\n                                JSON.stringify(ks)\n                            )\n                        )(Right)(\n                            bindMay(find(x => k === x.root)(subs))(\n                                chosen => Just(\n                                    isNull(chosen.nest) ? (\n                                        ks // Choice made in leaf menu.\n                                    ) : go(chosen)\n                                )\n                            )\n                        );\n                    }\n                )\n            )\n        )(Tuple(true)([]))[1];\n    };\n    return go(tree);\n};"
    }
  ]
}