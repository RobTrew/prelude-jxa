{
  "title": "group",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// group :: Eq a => [a] -> [[a]]\nconst group = xs => {\n    // A list of lists, each containing only equal elements,\n    // such that the concatenation of these lists is xs.\n    const go = xs =>\n        0 < xs.length ? (() => {\n            const\n                h = xs[0],\n                i = xs.findIndex(x => h !== x);\n            return i !== -1 ? (\n                [xs.slice(0, i)].concat(go(xs.slice(i)))\n            ) : [xs];\n        })() : [];\n    const v = go(list(xs));\n    return 'string' === typeof xs ? (\n        v.map(x => x.join(''))\n    ) : v;\n};"
    }
  ]
}