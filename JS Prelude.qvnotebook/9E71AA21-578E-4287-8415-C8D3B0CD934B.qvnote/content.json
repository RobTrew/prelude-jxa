{
  "title": "zipWithM",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// zipWithM :: Applicative m => (a -> b -> m c) -> [a] -> [b] -> m [c]\nconst zipWithM = (f, xs, ys) =>\n    sequenceA(zipWith(f, xs, ys));"
    }
  ]
}