{
  "title": "foldl1",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// foldl1 :: (a -> a -> a) -> [a] -> a\nconst foldl1 = f =>\n    // Left to right reduction of the non-empty list xs,\n    // using the binary operator f, with the head of xs\n    // as the initial acccumulator value.\n    xs => (\n        ys => 1 < ys.length ? ys.slice(1)\n        .reduce(uncurry(f), ys[0]) : ys[0]\n    )(list(xs));    "
    }
  ]
}