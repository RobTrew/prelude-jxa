{
  "title": "divMod",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// divMod :: Int -> Int -> (Int, Int)\nconst divMod = n => d => {\n    // Integer division, truncated toward negative infinity,\n    // and integer modulus such that:\n    // (x `div` y)*y + (x `mod` y) == x\n    const [q, r] = [Math.trunc(n / d), n % d];\n    return signum(n) === signum(-d) ? (\n        Tuple(q - 1)(r + d)\n    ) : Tuple(q)(r);\n};"
    }
  ]
}