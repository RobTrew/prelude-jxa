{
  "title": "foldMapTree",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// foldMapTree :: Monoid m => (a -> m) -> Tree a -> m\nconst foldMapTree = f => {\n    // Result of mapping each element of the tree to\n    // a monoid, and combining with mappend.\n    const go = tree =>\n        0 < tree.nest.length ? mappend(f(tree.root))(\n            foldl1(mappend)(tree.nest.map(go))\n        ) : f(tree.root);\n    return go;\n};"
    }
  ]
}