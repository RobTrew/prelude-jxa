{
  "title": "takeWhileR",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// takeWhileR :: (a -> Bool) -> [a] -> [a]\nconst takeWhileR = p =>\n    // The longest suffix of xs in which\n    // all elements satisfy p.\n    xs => {\n        const ys = list(xs);\n        let i = ys.length;\n        while (i-- && p(ys[i])) {}\n        return ys.slice(i + 1);\n    };"
    }
  ]
}