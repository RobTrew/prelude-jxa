{
  "title": "span",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// span, applied to a predicate p and a list xs, returns a tuple of xs of \n// elements that satisfy p and second element is the remainder of the list:\n//\n// > span (< 3) [1,2,3,4,1,2,3,4] == ([1,2],[3,4,1,2,3,4])\n// > span (< 9) [1,2,3] == ([1,2,3],[])\n// > span (< 0) [1,2,3] == ([],[1,2,3])\n//\n// span p xs is equivalent to (takeWhile p xs, dropWhile p xs) "
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "// span :: (a -> Bool) -> [a] -> ([a], [a])\nconst span = (f, xs) =>\n    splitAt(until(\n        i => !f(xs[i]),\n        i => i + 1,\n        0\n    ), xs);"
    }
  ]
}